<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CodeKeeper.Resources">

    <Style x:Key="GridViewHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>

    <Style TargetType="{x:Type ListViewItem}" >
        <!-- 
            This allows for using an item's HorizontalAlignment property to align items within 
            the ListView by stretching the content to fill the available horizontal space. 
        -->
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border" Padding="0,3,0,3" SnapsToDevicePixels="true"
                       Background="#F0F0FF" CornerRadius="3" Margin="1" BorderThickness="1">
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="DarkBlue"/>
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Color="#FFBED7FE" Offset="0.1"/>
                                        <GradientStop Color="#FF6C82CC" Offset="0.51"/>
                                        <GradientStop Color="#FF5567A1" Offset="0.986"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="DarkBlue" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="LightSteelBlue"/>
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Color="#e0e0e0" Offset="0.3"/>
                                        <GradientStop Color="#d8d8d8" Offset="0.51"/>
                                        <GradientStop Color="#d0d0d0" Offset="0.986"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- General appearance of ListView ColumnHeaders -->
    <Style TargetType ="GridViewColumnHeader">
        <Setter Property="Padding" Value="2,1,3,1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property ="Background" Value ="LightSlateGray" />
        <Setter Property ="Foreground" Value ="White" />
        <Style.Triggers>
            <Trigger Property ="IsMouseOver" Value ="True" >
                <Setter Property ="Background" Value ="#FFF2A73A" />
                <Setter Property ="Foreground" Value ="Black" />
            </Trigger>
        </Style.Triggers>
    </Style >

    <Color x:Key="ToolbarBackgroundColor">#ff7A92A7</Color>
    <Color x:Key="ToolbarBorderColor">#FFADBBC9</Color>
    <Color x:Key="TextColor">#CCF5F3ED</Color>

    <LinearGradientBrush x:Key="HeaderLinearBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#FF879ba3" Offset="0.0"/>
        <GradientStop Color="#FF7d9199" Offset="0.35"/>
        <GradientStop Color="#FF788c94" Offset="0.5" />
        <GradientStop Color="#FF495a61" Offset="1.0"/>
    </LinearGradientBrush>
    
    <SolidColorBrush x:Key="ToolbatBackgroundBrush" Color="{StaticResource ToolbarBackgroundColor}" />
    <SolidColorBrush x:Key="ToolbarBorderBrush" Color="{StaticResource ToolbarBorderColor}" />
    <SolidColorBrush x:Key="HeaderBackgroundColor" Color="{StaticResource ToolbarBackgroundColor}"/>
    <SolidColorBrush x:Key="TextBrush" Color="{StaticResource TextColor}" />
    
    <Style x:Key="BorderlessButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Margin" Value="1 0 5 0" />
        <Setter Property="Opacity" Value="1.0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Button.Opacity" Value="0.25" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToolBarContainer" TargetType="{x:Type Border}">
        <Setter Property="Padding" Value="7 0"/>
        <Setter Property="Height" Value="42" />
        <Setter Property="Background" Value="{StaticResource HeaderLinearBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ToolbarBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="0 0 0 5" />
    </Style>

    <Style x:Key="ToolBarSeparator"
           TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="1,0,0,0"/>
        <Setter Property="BorderBrush" Value="#FFC5C5C5"/>
        <Setter Property="Margin" Value="5,2"/>
        <Setter Property="Width" Value="2"/>
        <Setter Property="Background" Value="{StaticResource ToolbarBorderBrush}"/>
    </Style>

    <Style x:Key="ToolbarButton" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="24"/>
        <Setter Property="Height" Value="24" />
        <Setter Property="Margin" Value="5 0"/>
        <Setter Property="Background" Value="{StaticResource ToolbatBackgroundBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="DimGray" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="Silver"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Margin" Value="1" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Orange"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.85"/>
                <Setter Property="Background" Value="Gray"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.65"/>
                <Setter Property="Foreground" Value="Gray" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
</ResourceDictionary>